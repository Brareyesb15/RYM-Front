{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Rick y Morty\\\\Front\\\\src\\\\components\\\\Card.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { deleteFavs, addFavs } from \"../Redux/action\";\nimport { connect } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport obtendatos from \"../../../Back/src/controllers/obtenFavs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardStyle = styled.div`\ndisplay: flex;\nborder: 50px red;\nmargin: 25px;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\nbackground-image: url(https://i.pinimg.com/originals/97/86/ec/9786ec883756c755df35a331ff902f3b.png);\nbackground-position: center;\n   background-size: cover;\n   border-radius: 50px;\n\n\n`;\n_c = CardStyle;\nconst H2Style = styled.h2` \ncolor: white;\nheight: 25%;\ntext-align: center;\n`;\n_c2 = H2Style;\nconst ImgStyle = styled.img`\npadding: 20px;\n`;\n_c3 = ImgStyle;\nconst ButtonStyle = styled.button`\nheight: 50%;\n`;\n_c4 = ButtonStyle;\nconst Superior = styled.div`\nposition: relative;\npadding-top: 20px;\nalign-items: baseline;\nwidth: 85%;\ndisplay: flex;\njustify-content: space-between;\nflex-direction: wrap; \n`;\n_c5 = Superior;\nconst H3Style = styled.h3``;\n_c6 = H3Style;\nexport function Card(props) {\n  _s();\n  const [isFav, setIsFav] = React.useState(false);\n  let pj = {\n    nombre: props.name,\n    id: props.id,\n    gender: props.gender,\n    species: props.species,\n    image: props.image\n  };\n  const mostrarme = async () => {\n    try {\n      const info = await axios.get(`http://localhost:3001/rickandmorty/fav/obtendatos`);\n      const data = info.data;\n      console.log(data);\n      // en este array est치 guardado el array de favs, ma침ana intentar guardarlo en el estado global de favs, para que el estado global se vaya guardando en el back.\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleFavorite = async () => {\n    if (isFav === true) {\n      setIsFav(false);\n      {\n        setIsFav(true);\n        props.addFavs(props);\n      }\n    } else try {\n      const info = await axios.post(`http://localhost:3001/rickandmorty/fav/add`, pj);\n      const data = info.data;\n      console.log(data);\n      // en este array est치 guardado el array de favs, ma침ana intentar guardarlo en el estado global de favs, para que el estado global se vaya guardando en el back.\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    // ojo con este, cuando hagas los cambios para pasar el array al back actualiza esta funci칩n, es importante para guardar los favs\n    // Como lo vas a hacer? esta funcion ya no va a buscar en el props.allcharacters si no que va a pedirle al back que le averigue en el array\n    // si el ID est치 en el array de favs, si est치, entonces set is fav es true. \n    props.allCharactersa.forEach(fav => {\n      if (fav.id === props.id) {\n        setIsFav(true);\n      }\n    });\n  }, [props.allCharactersa]);\n  return /*#__PURE__*/_jsxDEV(CardStyle, {\n    children: [/*#__PURE__*/_jsxDEV(Superior, {\n      children: [isFav ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFavorite,\n        children: \"\\u2764\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(ButtonStyle, {\n        onClick: handleFavorite,\n        children: \"\\uD83E\\uDD0D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 69\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/detail/${props.id}`,\n        children: [\" \", /*#__PURE__*/_jsxDEV(H2Style, {\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 45\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(ButtonStyle, {\n        onClick: props.onClose,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(ImgStyle, {\n      src: props.image,\n      alt: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(H3Style, {\n      children: [\"Especie: \", props.species]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(H3Style, {\n      children: [\"Genero: \", props.gender]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 7\n  }, this);\n}\n_s(Card, \"P/ohr7L6r3Ai4GOhTgqo0B9M8uQ=\");\n_c7 = Card;\nexport function mapDispatchToProps(dispatch) {\n  return {\n    addFavs: props => {\n      dispatch(addFavs(props));\n    },\n    deleteFavs: id => {\n      dispatch(deleteFavs(id));\n    }\n  };\n}\nexport function mapStateToProps(state) {\n  return {\n    myFavorites: state.myFavorites,\n    allCharactersa: state.allCharacters\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"CardStyle\");\n$RefreshReg$(_c2, \"H2Style\");\n$RefreshReg$(_c3, \"ImgStyle\");\n$RefreshReg$(_c4, \"ButtonStyle\");\n$RefreshReg$(_c5, \"Superior\");\n$RefreshReg$(_c6, \"H3Style\");\n$RefreshReg$(_c7, \"Card\");","map":{"version":3,"names":["React","styled","Link","deleteFavs","addFavs","connect","useEffect","axios","obtendatos","CardStyle","div","H2Style","h2","ImgStyle","img","ButtonStyle","button","Superior","H3Style","h3","Card","props","isFav","setIsFav","useState","pj","nombre","name","id","gender","species","image","mostrarme","info","get","data","console","log","error","handleFavorite","post","allCharactersa","forEach","fav","onClose","mapDispatchToProps","dispatch","mapStateToProps","state","myFavorites","allCharacters"],"sources":["C:/Users/Usuario/Desktop/Rick y Morty/Front/src/components/Card.jsx"],"sourcesContent":["import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport {Link} from \"react-router-dom\"\r\nimport { deleteFavs, addFavs } from \"../Redux/action\"\r\nimport { connect } from \"react-redux\"\r\nimport { useEffect } from \"react\"\r\nimport axios from \"axios\"\r\nimport obtendatos from \"../../../Back/src/controllers/obtenFavs\"\r\n\r\nconst CardStyle = styled.div`\r\ndisplay: flex;\r\nborder: 50px red;\r\nmargin: 25px;\r\nflex-direction: column;\r\nalign-items: center;\r\njustify-content: center;\r\nbackground-image: url(https://i.pinimg.com/originals/97/86/ec/9786ec883756c755df35a331ff902f3b.png);\r\nbackground-position: center;\r\n   background-size: cover;\r\n   border-radius: 50px;\r\n\r\n\r\n`\r\nconst H2Style = styled.h2 ` \r\ncolor: white;\r\nheight: 25%;\r\ntext-align: center;\r\n`\r\nconst ImgStyle = styled.img`\r\npadding: 20px;\r\n`\r\n\r\nconst ButtonStyle = styled.button `\r\nheight: 50%;\r\n`\r\n\r\nconst Superior = styled.div `\r\nposition: relative;\r\npadding-top: 20px;\r\nalign-items: baseline;\r\nwidth: 85%;\r\ndisplay: flex;\r\njustify-content: space-between;\r\nflex-direction: wrap; \r\n`\r\nconst H3Style= styled.h3 ``\r\n\r\nexport function Card(props) {\r\n   const [isFav, setIsFav] = React.useState(false)\r\n   let pj = {nombre: props.name,\r\n      id : props.id,\r\n      gender: props.gender,\r\n      species: props.species,\r\n      image: props.image  \r\n     }\r\n\r\n   const mostrarme = async () =>{\r\n      try {\r\n         const info =  await axios.get(`http://localhost:3001/rickandmorty/fav/obtendatos`) \r\n         const data =  info.data\r\n         console.log(data)\r\n           // en este array est치 guardado el array de favs, ma침ana intentar guardarlo en el estado global de favs, para que el estado global se vaya guardando en el back.\r\n           \r\n         }catch (error){console.log(error)}}\r\n   \r\n   const handleFavorite = async () => {\r\n      if (isFav === true) {\r\n         setIsFav(false); \r\n         {setIsFav(true); props.addFavs(props)}}\r\n      else  \r\n      try {\r\n       const info =  await axios.post(`http://localhost:3001/rickandmorty/fav/add`, pj) \r\n       const data =  info.data\r\n       console.log(data)\r\n         // en este array est치 guardado el array de favs, ma침ana intentar guardarlo en el estado global de favs, para que el estado global se vaya guardando en el back.\r\n         \r\n       }catch (error){console.log(error)}}\r\n      \r\n   \r\n\r\n\r\n      useEffect(() => { \r\n         // ojo con este, cuando hagas los cambios para pasar el array al back actualiza esta funci칩n, es importante para guardar los favs\r\n         // Como lo vas a hacer? esta funcion ya no va a buscar en el props.allcharacters si no que va a pedirle al back que le averigue en el array\r\n         // si el ID est치 en el array de favs, si est치, entonces set is fav es true. \r\n         props.allCharactersa.forEach((fav) => {\r\n            if (fav.id === props.id) {\r\n               setIsFav(true);\r\n            }\r\n         });\r\n      }, [props.allCharactersa]);\r\n   return (\r\n      \r\n      <CardStyle>\r\n         <Superior>\r\n         {isFav ? (<button onClick={handleFavorite}>仇벒잺</button>) : (<ButtonStyle onClick={handleFavorite}>游밼</ButtonStyle>)}\r\n         <Link to={`/detail/${props.id}`} > <H2Style>{props.name}</H2Style> </Link>\r\n         <ButtonStyle onClick={props.onClose}>X</ButtonStyle>\r\n         </Superior>\r\n         <ImgStyle  src={props.image} alt={props.name} /> \r\n   \r\n         <H3Style>Especie: {props.species}</H3Style>\r\n         <H3Style>Genero: {props.gender}</H3Style>\r\n       \r\n         \r\n      </CardStyle>\r\n   );\r\n}\r\n\r\nexport function mapDispatchToProps(dispatch) {\r\n   return {\r\n      addFavs : (props) => {dispatch(addFavs(props))},\r\n      deleteFavs : (id) => {dispatch(deleteFavs(id))}\r\n   }\r\n}\r\nexport function mapStateToProps(state) {\r\n   return {\r\n      myFavorites : state.myFavorites,\r\n      allCharactersa: state.allCharacters\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}